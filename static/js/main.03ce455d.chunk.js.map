{"version":3,"sources":["components/QuoteBlock.js","utils/helpers.js","components/Quotes.js","components/Info.js","assets/icons/refresh-icon.svg","utils/config.js","components/Randomizer.js","components/App.js","index.js"],"names":["text","className","undefined","buildQueryStr","first","last","fetchData","setter","url","fetch","then","res","json","data","mainQuote","useState","quotes","setQuotes","useEffect","R","quoteList","map","quoteText","_id","QuoteBlock","quoteAuthor","setState","onClick","quoteGenre","xmlns","height","viewBox","fill","width","d","setMainQuote","config","src","refreshIcon","state","Randomizer","Info","Quotes","renderView","ReactDOM","render","App","document","querySelector"],"mappings":"uKAAe,cAAe,IAAZA,EAAW,EAAXA,KACjB,OACC,qBAAIC,UAAU,cAAd,UACC,qBAAKA,UAAU,qBACf,oBAAIA,UAAU,oBAAd,cACWC,IAATF,EAAA,WAAyBA,EAAzB,KAAmC,WCL3BG,EAAgB,SAAC,GAAmB,IAAD,mBAAjBC,EAAiB,KAAVC,EAAU,KAC/C,MAAM,2DAAN,OAAkED,EAAlE,YAA2EC,IAG/DC,EAAY,SAACC,EAAQC,GACjC,OAAOC,MAAMD,GACXE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,gBAAGG,EAAH,EAAGA,KAAH,OAAcN,EAAOM,O,gCCFd,cAAoB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAGjCC,qBAAU,WACT,IAAKC,IAAUL,GAAY,CAC1B,IAAMN,EAAMW,IACXA,IAAO,eACPA,IAAQ,KACRhB,EAHWgB,CAIVL,GACFR,EAAUW,EAAWT,MAEpB,CAACM,IAEJ,IAAMM,EAAYJ,EAAOK,KAAI,YAAyB,IAAtBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAC1C,OAAO,cAACC,EAAD,CAAYxB,KAAMsB,GAAgBC,MAG1C,OACC,sBAAKtB,UAAU,SAAf,UACC,oBAAIA,UAAU,iBAAd,SAAgCa,EAAUW,cAC1C,oBAAIxB,UAAU,eAAd,SAA8BmB,QC1BlB,cAA8B,IAA3BM,EAA0B,EAA1BA,SAAUZ,EAAgB,EAAhBA,UAC3B,OACC,sBAAKb,UAAU,OAAO0B,QAAS,kBAAMD,EAAS,IAA9C,UACC,sBAAKzB,UAAU,gBAAf,UACC,mBAAGA,UAAU,cAAb,SAA4Ba,EAAU,GAAGc,aACzC,oBAAI3B,UAAU,eAAd,SAA8Ba,EAAU,GAAGW,iBAE5C,sBACCxB,UAAU,cACV4B,MAAM,6BACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,KANP,UAQC,sBAAMC,EAAE,gBAAgBF,KAAK,SAC7B,sBAAME,EAAE,gDChBG,MAA0B,yCCA1B,EACP,0DCGO,cAAqB,IAAnBC,EAAkB,EAAlBA,aACb,OACI,sBACAlC,UAAU,aACV0B,QAAS,kBAAMrB,EAAU6B,EAAcC,IAFvC,UAIA,mBAAGnC,UAAU,mBAAb,oBACA,qBAAKA,UAAU,mBAAmBoC,IAAKC,QCHhC,aAAO,IAAD,EACcvB,mBAAS,CAAC,KADxB,mBACbD,EADa,KACFqB,EADE,OAEMpB,mBAAS,GAFf,mBAEbwB,EAFa,KAENb,EAFM,KAIpBR,qBAAU,WACTZ,EAAU6B,EAAcC,KACtB,IAiBH,OACC,sBAAKnC,UAAU,MAAf,UACC,cAACuC,EAAD,CAAYL,aAAcA,IAjBT,WAClB,OAAQI,GACP,KAAK,EACJ,OACC,qCACC,cAACf,EAAD,CAAYxB,KAAMc,EAAU,GAAGQ,YAC/B,cAACmB,EAAD,CAAM3B,UAAWA,EAAWY,SAAUA,OAIzC,KAAK,EACJ,OAAO,cAACgB,EAAD,CAAQ5B,UAAWA,EAAU,MAOpC6B,O,MC5BJC,IAASC,OAAO,cAACC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.03ce455d.chunk.js","sourcesContent":["export default ({ text }) => {\n\treturn (\n\t\t<li className=\"quote-block\">\n\t\t\t<div className=\"quote-block__bar\"></div>\n\t\t\t<h1 className=\"quote-block__text\">\n\t\t\t\t{text !== undefined ? `\"${text}\"` : null}\n\t\t\t</h1>\n\t\t</li>\n\t);\n};\n","export const buildQueryStr = ([first, last]) => {\n\treturn `https://quote-garden.herokuapp.com/api/v3/quotes?author=${first}+${last}`;\n};\n\nexport const fetchData = (setter, url) => {\n\treturn fetch(url)\n\t\t.then((res) => res.json())\n\t\t.then(({ data }) => setter(data));\n};\n","import { useState, useEffect } from \"react\";\nimport QuoteBlock from \"components/QuoteBlock\";\nimport { fetchData, buildQueryStr } from \"utils/helpers\";\nimport * as R from \"ramda\";\n\nexport default ({ mainQuote }) => {\n\tconst [quotes, setQuotes] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (!R.isEmpty(mainQuote)) {\n\t\t\tconst url = R.pipe(\n\t\t\t\tR.prop(\"quoteAuthor\"),\n\t\t\t\tR.split(\" \"),\n\t\t\t\tbuildQueryStr\n\t\t\t)(mainQuote);\n\t\t\tfetchData(setQuotes, url);\n\t\t}\n\t}, [mainQuote]);\n\n\tconst quoteList = quotes.map(({ quoteText, _id }) => {\n\t\treturn <QuoteBlock text={quoteText} key={_id} />;\n\t});\n\n\treturn (\n\t\t<div className=\"quotes\">\n\t\t\t<h2 className=\"quotes__author\">{mainQuote.quoteAuthor}</h2>\n\t\t\t<ul className=\"quotes__list\">{quoteList}</ul>\n\t\t</div>\n\t);\n};\n","export default ({ setState, mainQuote }) => {\n\treturn (\n\t\t<div className=\"info\" onClick={() => setState(2)}>\n\t\t\t<div className=\"info__content\">\n\t\t\t\t<p className=\"info__genre\">{mainQuote[0].quoteGenre}</p>\n\t\t\t\t<h2 className=\"info__author\">{mainQuote[0].quoteAuthor}</h2>\n\t\t\t</div>\n\t\t\t<svg\n\t\t\t\tclassName=\"info__arrow\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"#333\"\n\t\t\t\twidth=\"24\"\n\t\t\t>\n\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\" />\n\t\t\t\t<path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\" />\n\t\t\t</svg>\n\t\t</div>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/refresh-icon.80bd744b.svg\";","export default {\n    URL: `https://quote-garden.herokuapp.com/api/v3/quotes/random`,\n}","import refreshIcon from \"assets/icons/refresh-icon.svg\";\nimport config from \"utils/config\";\nimport { fetchData } from \"utils/helpers\";\n\nexport default ({setMainQuote}) => {\n    return (\n        <div\n        className=\"randomizer\"\n        onClick={() => fetchData(setMainQuote, config.URL)}\n    >\n        <p className=\"randomizer__text\">random</p>\n        <img className=\"randomizer__icon\" src={refreshIcon} />\n    </div>\n    )\n}","import { useState, useEffect } from \"react\";\nimport QuoteBlock from \"components/QuoteBlock\";\nimport Quotes from \"components/Quotes\";\nimport { fetchData } from \"utils/helpers\";\nimport Info from \"components/Info\";\nimport Randomizer from \"components/Randomizer\";\nimport config from \"utils/config\";\n\nexport default () => {\n\tconst [mainQuote, setMainQuote] = useState([{}]);\n\tconst [state, setState] = useState(1);\n\n\tuseEffect(() => {\n\t\tfetchData(setMainQuote, config.URL);\n\t}, []);\n\n\tconst renderView = () => {\n\t\tswitch (state) {\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<QuoteBlock text={mainQuote[0].quoteText} />\n\t\t\t\t\t\t<Info mainQuote={mainQuote} setState={setState} />\n\t\t\t\t\t</>\n\t\t\t\t);\n\n\t\t\tcase 2:\n\t\t\t\treturn <Quotes mainQuote={mainQuote[0]} />;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Randomizer setMainQuote={setMainQuote} />\n\t\t\t{renderView()}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"css/index.css\";\n\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}